<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Device extends \AppBundle\Entity\Device implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'alt_id', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'brand', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'model', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'serial', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'device_type', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'custom_fields', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'repairs', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'created_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'alt_id', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'brand', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'model', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'serial', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'device_type', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'custom_fields', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'repairs', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Device' . "\0" . 'created_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Device $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', []);

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', [$brand]);

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', []);

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', [$model]);

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerial', []);

        return parent::getSerial();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerial($serial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerial', [$serial]);

        return parent::setSerial($serial);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeviceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeviceType', []);

        return parent::getDeviceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeviceType($device_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeviceType', [$device_type]);

        return parent::setDeviceType($device_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomFields', []);

        return parent::getCustomFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomFields($custom_fields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomFields', [$custom_fields]);

        return parent::setCustomFields($custom_fields);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepairs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepairs', []);

        return parent::getRepairs();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepairs($repairs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepairs', [$repairs]);

        return parent::setRepairs($repairs);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getAltId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAltId', []);

        return parent::getAltId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAltId($alt_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAltId', [$alt_id]);

        return parent::setAltId($alt_id);
    }

}
