<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Localization extends \AppBundle\Entity\Localization implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'street', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'city', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'post_code', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'tel_1', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'tel_2', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'tel_3', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'email_first', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'email_second', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'mon_fri_open', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'sat_open', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'company', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'employees', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'repairs_started_in_localization', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'repairCosts'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'street', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'city', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'post_code', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'tel_1', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'tel_2', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'tel_3', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'email_first', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'email_second', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'mon_fri_open', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'sat_open', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'company', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'employees', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'repairs_started_in_localization', '' . "\0" . 'AppBundle\\Entity\\Localization' . "\0" . 'repairCosts'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Localization $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getSatOpen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSatOpen', []);

        return parent::getSatOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function setSatOpen($sat_open)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSatOpen', [$sat_open]);

        return parent::setSatOpen($sat_open);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreet', []);

        return parent::getStreet();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreet($street)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreet', [$street]);

        return parent::setStreet($street);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostCode', []);

        return parent::getPostCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostCode($post_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostCode', [$post_code]);

        return parent::setPostCode($post_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getTel1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTel1', []);

        return parent::getTel1();
    }

    /**
     * {@inheritDoc}
     */
    public function setTel1($tel_1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTel1', [$tel_1]);

        return parent::setTel1($tel_1);
    }

    /**
     * {@inheritDoc}
     */
    public function getTel2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTel2', []);

        return parent::getTel2();
    }

    /**
     * {@inheritDoc}
     */
    public function setTel2($tel_2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTel2', [$tel_2]);

        return parent::setTel2($tel_2);
    }

    /**
     * {@inheritDoc}
     */
    public function getTel3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTel3', []);

        return parent::getTel3();
    }

    /**
     * {@inheritDoc}
     */
    public function setTel3($tel_3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTel3', [$tel_3]);

        return parent::setTel3($tel_3);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailFirst()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailFirst', []);

        return parent::getEmailFirst();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailFirst($email_first)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailFirst', [$email_first]);

        return parent::setEmailFirst($email_first);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailSecond()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailSecond', []);

        return parent::getEmailSecond();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailSecond($email_second)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailSecond', [$email_second]);

        return parent::setEmailSecond($email_second);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonFriOpen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonFriOpen', []);

        return parent::getMonFriOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonFriOpen($mon_fri_open)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonFriOpen', [$mon_fri_open]);

        return parent::setMonFriOpen($mon_fri_open);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany($company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployees', []);

        return parent::getEmployees();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployees($employees)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployees', [$employees]);

        return parent::setEmployees($employees);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepairsStartedInLocalization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepairsStartedInLocalization', []);

        return parent::getRepairsStartedInLocalization();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepairsStartedInLocalization($repairs_started_in_localization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepairsStartedInLocalization', [$repairs_started_in_localization]);

        return parent::setRepairsStartedInLocalization($repairs_started_in_localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepairCosts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepairCosts', []);

        return parent::getRepairCosts();
    }

    /**
     * {@inheritDoc}
     */
    public function setRepairCosts($repairCosts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRepairCosts', [$repairCosts]);

        return parent::setRepairCosts($repairCosts);
    }

}
