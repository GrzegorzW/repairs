<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_assetic_26e5d80' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '26e5d80',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/26e5d80.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_26e5d80_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '26e5d80',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/26e5d80_bootstrap.min_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_26e5d80_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '26e5d80',    'pos' => 1,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/26e5d80_style_2.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_26e5d80_2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '26e5d80',    'pos' => 2,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/26e5d80_sweetalert_3.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_8bc0093' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '8bc0093',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/8bc0093.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_8bc0093_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '8bc0093',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/8bc0093_jquery-2.1.4.min_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_8bc0093_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '8bc0093',    'pos' => 1,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/8bc0093_bootstrap.min_2.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_8bc0093_2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '8bc0093',    'pos' => 2,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/8bc0093_sweetalert.min_3.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_7b09e58' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7b09e58',    'pos' => NULL,    '_format' => 'jpg',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/images/7b09e58.jpg',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_7b09e58_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '7b09e58',    'pos' => 0,    '_format' => 'jpg',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/images/7b09e58_logo1_1.jpg',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_04f3847' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '04f3847',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/04f3847.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_04f3847_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '04f3847',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/04f3847_bootstrap.min_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_04f3847_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '04f3847',    'pos' => 1,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/04f3847_bootstrap-datepicker.min_2.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_04f3847_2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '04f3847',    'pos' => 2,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/04f3847_bootstrap-toggle.min_3.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_04f3847_3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '04f3847',    'pos' => 3,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/04f3847_style_4.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_04f3847_4' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '04f3847',    'pos' => 4,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/04f3847_sweetalert_5.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_jquery-2.1.4.min_1.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 1,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_bootstrap.min_2.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 2,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_bootstrap-datepicker.min_3.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 3,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_bootstrap-datepicker.pl.min_4.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_4' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 4,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_bootstrap-toggle.min_5.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_5' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 5,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_sweetalert.min_6.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_6' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 6,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_jquery.formatter.min_7.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_7' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 7,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_inputmask.min_8.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_8' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 8,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_jquery.inputmask.min_9.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_9' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 9,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_inputmask.numeric.extensions.min_10.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9ca1f63_10' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9ca1f63',    'pos' => 10,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/9ca1f63_moment-with-locales.min_11.js',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_948bb15' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '948bb15',    'pos' => NULL,    '_format' => 'ico',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/images/948bb15.ico',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_948bb15_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '948bb15',    'pos' => 0,    '_format' => 'ico',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/images/948bb15_favicon_1.ico',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_a395062' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a395062',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/a395062.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_a395062_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a395062',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/a395062_bootstrap.min_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_a395062_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'a395062',    'pos' => 1,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/a395062_style_2.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_device_type_templateremove_custom_field_template' => array (  0 =>   array (    0 => 'customFieldTemplate',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::removeDeviceTypeTemplateAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'customFieldTemplate',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/admin/management/custom-field-templates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_device_typeremove_device_type' => array (  0 =>   array (    0 => 'deviceType',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::removeDeviceTypeAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'deviceType',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/admin/management/device-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_create_device_type_custom_field_templatecreate_device_type_custom_field' => array (  0 =>   array (    0 => 'deviceType',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::createDeviceTypeCustomFieldTemplateAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'deviceType',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/admin/management/device-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_create_devicecreate_device' => array (  0 =>   array (    0 => 'client',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::createDeviceAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/devices',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_device_type_fieldsget_device_type_fields' => array (  0 =>   array (    0 => 'deviceType',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::getDeviceTypeFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'deviceType',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/device-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_device_typeadd_device_type' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::addDeviceTypeAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/admin/management/device-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_worker_total_repair_pricing_requestadd_total_repair_pricing_request' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::addWorkerTotalRepairPricingRequestAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_format' => 'json|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/total-pricing',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/repairs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_set_total_repair_pricing_responsetotal_repair_pricing_response' => array (  0 =>   array (    0 => 'pricing',    1 => 'responseMethod',    2 => 'pricingStatus',    3 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::setTotalRepairPricingResponseAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'pricingStatus',    ),    2 =>     array (      0 => 'text',      1 => '/status',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'responseMethod',    ),    4 =>     array (      0 => 'text',      1 => '/method',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pricing',    ),    6 =>     array (      0 => 'text',      1 => '/api/v1/repairs/total-pricing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_accept_total_repair_pricing_using_emailtotal_repair_pricing_acceptation_using_email' => array (  0 =>   array (    0 => 'pricing',    1 => 'responseMethod',    2 => 'hash',    3 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::acceptTotalRepairPricingUsingEmailAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'hash',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'responseMethod',    ),    3 =>     array (      0 => 'text',      1 => '/email-acceptation-method',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pricing',    ),    5 =>     array (      0 => 'text',      1 => '/api/v1/repairs/total-pricing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_set_notification_readread_notification' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::setNotificationReadAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/read',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_set_repair_cost_approvedrepair_approved' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::setRepairCostApprovedAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/repair/approved',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_set_repair_cost_not_approvedrepair_not_approved' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::setRepairCostNotApprovedAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/repair/not-approved',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_create_payment_methodcreate_payment_method' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::createPaymentMethodAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/payment-method',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_create_repair_cost_kindcreate_repair_cost_kind' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::createRepairCostKindAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/v1/repair-cost-kind',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_repair_cost_kindremove_repair_cost_kind' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::removeRepairCostKindAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/repair-cost-kind',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_payment_methodremove_payment_method' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::removePaymentMethodAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/payment-method',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_set_repair_statusset_repair_status' => array (  0 =>   array (    0 => 'repair',    1 => 'status',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::setRepairStatusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/status',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'repair',    ),    4 =>     array (      0 => 'text',      1 => '/api/v1/repair',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_update_repair_start_localizationedit_repair_start_localization' => array (  0 =>   array (    0 => 'localization',    1 => 'repair',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::updateRepairStartLocalizationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'repair',    ),    2 =>     array (      0 => 'text',      1 => '/repair',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'localization',    ),    4 =>     array (      0 => 'text',      1 => '/api/v1/localizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_update_repair_cost_localizationedit_repair_cost_localization' => array (  0 =>   array (    0 => 'localization',    1 => 'repairCost',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::updateRepairCostLocalizationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'repairCost',    ),    2 =>     array (      0 => 'text',      1 => '/repair-cost',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'localization',    ),    4 =>     array (      0 => 'text',      1 => '/api/v1/localizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_change_repairerchange-repairer' => array (  0 =>   array (    0 => 'repair',    1 => 'newRepairer',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::changeRepairerAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'newRepairer',    ),    2 =>     array (      0 => 'text',      1 => '/new-repairer',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'repair',    ),    4 =>     array (      0 => 'text',      1 => '/api/v1/repair',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_edit_repair_payment_methodedit_repair_payment_method' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::editRepairPaymentMethodAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/payment-method',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/repair',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_worker_order_historyget_worker_order' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::getWorkerOrderHistoryAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/worker-order/history',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_set_worker_order_statusset_worker_order_status' => array (  0 =>   array (    0 => 'workerOrder',    1 => 'workerOrderStatus',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::setWorkerOrderStatusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'workerOrderStatus',    ),    2 =>     array (      0 => 'text',      1 => '/status',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workerOrder',    ),    4 =>     array (      0 => 'text',      1 => '/api/v1/worker-order',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_update_worker_order_contentupdate_worker_order_content' => array (  0 =>   array (    0 => 'workerOrder',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::updateWorkerOrderContentAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/content',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workerOrder',    ),    3 =>     array (      0 => 'text',      1 => '/api/v1/worker-order',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_worker_orderremove_worker_order' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\RestApiController::removeWorkerOrderAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/v1/worker-order',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::adminManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_localization_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::addLocalizationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/management/localizations/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_device_type_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::addDeviceTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/management/device-types/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_localization_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::editLocalizationAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/management/localizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_regulatory_paragraph_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::editParagraphAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/management/regulatory/paragraphs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_regulatory_paragraph_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::addParagraphAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/management/regulatory/paragraph/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_add_repairer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::addRepairerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add-repairer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/management/localization',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_management_edit_repairer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::editRepairerAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/management/repairer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_report' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\AdminController::reportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/report',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pokwitowanie_user_panel' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::repairsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pokwitowanie_user_panel_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::repairDetailsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/repairs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pricing_accepted_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::pricingAcceptedUsingEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pricing-accepted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pricing_already_accepted' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\UserController::pricingAlreadyAcceptedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pricing-already-accepted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_repairs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::repairsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/worker/repairs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_repair_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::repairDetailsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/worker/repairs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_repair_pricing_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::editRepairCostAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/worker/repairs/pricing-edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_pokwitowanie_user_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::addUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/worker/pokwitowanie/add-user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_pokwitowanie_add_device' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::addDeviceAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/devices',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/worker/pokwitowanie/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_pokwitowanie_add_repair' => array (  0 =>   array (    0 => 'device',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::addRepairAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/repair',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'device',    ),    2 =>     array (      0 => 'text',      1 => '/worker/pokwitowanie/devices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_pokwitowanie_print' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::pokwitowanieAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/print',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/worker/pokwitowanie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_pokwitowanie-example_print' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::pokwitowanieExampleAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/print',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/worker/pokwitowanie-example',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_opinions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::opinionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/worker/opinions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::usersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/worker/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_user_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::userDetailsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/worker/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_orders' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::workerOrdersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/worker/orders',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_devices' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::devicesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/worker/devices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'worker_panel_device_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\WorkerController::deviceDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/worker/devices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'root' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction',    'path' => '/login',    'permanent' => true,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nelmio_api_doc_index' => array (  0 =>   array (    0 => 'view',  ),  1 =>   array (    '_controller' => 'Nelmio\\ApiDocBundle\\Controller\\ApiDocController::indexAction',    'view' => 'default',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'view',    ),    1 =>     array (      0 => 'text',      1 => '/api/doc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
